#!/usr/bin/env bash
#
#/ command: rundeck:create-project: "create a rundeck project"
#
#/ usage: rerun rundeck:create-project [options]
#
#/ rerun env variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option variables: NAME

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Parse the command options.
[[ -r $RERUN_MODULE_DIR/commands/create-project/options.sh ]] && {
    . $RERUN_MODULE_DIR/commands/create-project/options.sh || rerun_die "Failed loading options parser."
    rerun_options_parse "$@"
}


# Error handling
# ---------------
# * Trap calls `rerun_die` with standard message.
# * Exit upon command errors or accessing unset variables.
#   * See [set](http://ss64.com/bash/set.html)
trap 'rerun_die "*** command failed: rundeck:create-project. ***"' ERR
set -o nounset -o pipefail


# ------------------------------
# Your implementation goes here.
# ------------------------------

if [ -d /var/rundeck/projects/"${NAME}" ]
then
   echo "WARNING, project ${NAME} already exists, doing nothing" 1>&2
   exit 0
fi

projectTmpDir="$(mktemp -d)"

cp -r "${RERUN_MODULE_DIR}"/templates/project/* "${projectTmpDir}"

sed -i -e "s+\${PROJECT_NAME}+${NAME}+g" "${projectTmpDir}"/etc/project.properties

sudo mv  "${projectTmpDir}" /var/rundeck/projects/"${NAME}"
sudo chown -R rundeck:rundeck /var/rundeck/projects/"${NAME}"
sudo chmod 775 /var/rundeck/projects/"${NAME}"

exit $?

# Done
