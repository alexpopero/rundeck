#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: rundeck:create-job: "create a rundeck job"
#/ usage: rerun rundeck:create-job [options]

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh create-job || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: rundeck:create-job. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: 

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

loadJob() {
   url="$1"
   file="$2"
   cookieFile="$3"
   apiVersion=$4

   APIURL="${url}/api/${apiVersion}"
   runurl="${APIURL}/jobs/import"
   ulopts="-F xmlBatch=@${file}"
   CURLOPTS="-s -S -L -c ${cookieFile} -b ${cookieFile}"
   curl -o /dev/null -s -k -f ${CURLOPTS} ${ulopts} "${runurl}"
   curl -o /dev/null -s -k -f ${CURLOPTS} ${ulopts} "${runurl}?dupeOption=update"
}

cookiesTmp="$(mktemp)"
if ! doLogin "${RUNDECK_URL}" "${USERNAME}" "${PASSWORD}" "${cookiesTmp}"
then
   echo "Rundeck login failed, url: ${RUNDECK_URL}" 1>&2
   exit 1
fi

if ! loadJob "${RUNDECK_URL}" ${FILE} "${cookiesTmp}" $API_VERSION
then
   echo "Unable to load Rundeck job file ${FILE}" 1>&2
   exit 1
fi

exit $?

# Done
